{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jayjei\\\\Desktop\\\\Test\\\\react-tailwindcss-portfolio\\\\src\\\\hooks\\\\useScrollToTop.jsx\",\n    _s = $RefreshSig$();\n\n// NOTE: This scroll to top is the actual working scroll to to when user clicks on the circle arrow that appears when use scrolls down.\n// The other `ScrollToTop` component in components folder is for the default react scroll to top behavior on route visit.\nimport { useState, useEffect } from 'react';\nimport { FiChevronUp } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst useScrollToTop = () => {\n  _s();\n\n  const [showScroll, setShowScroll] = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', scrollToTop);\n    return function cleanup() {\n      window.removeEventListener('scroll', scrollToTop);\n    };\n  });\n\n  const scrollToTop = () => {\n    if (!showScroll && window.pageYOffset > 400) {\n      setShowScroll(true);\n    } else if (showScroll && window.pageYOffset <= 400) {\n      setShowScroll(false);\n    }\n  };\n\n  const backToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  window.addEventListener('scroll', scrollToTop);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FiChevronUp, {\n      className: \"scrollToTop\",\n      onClick: backToTop,\n      style: {\n        height: 45,\n        width: 45,\n        borderRadius: 50,\n        right: 50,\n        bottom: 50,\n        display: showScroll ? 'flex' : 'none',\n        padding: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(useScrollToTop, \"PfkPbRUmWGfJg95Mr7aaJLsda20=\");\n\nexport default useScrollToTop;","map":{"version":3,"sources":["C:/Users/Jayjei/Desktop/Test/react-tailwindcss-portfolio/src/hooks/useScrollToTop.jsx"],"names":["useState","useEffect","FiChevronUp","useScrollToTop","showScroll","setShowScroll","window","addEventListener","scrollToTop","cleanup","removeEventListener","pageYOffset","backToTop","scrollTo","top","behavior","height","width","borderRadius","right","bottom","display","padding"],"mappings":";;;AAAA;AACA;AAEA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,gBAA5B;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACfK,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,WAAlC;AACA,WAAO,SAASC,OAAT,GAAmB;AACzBH,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCF,WAArC;AACA,KAFD;AAGA,GALQ,CAAT;;AAOA,QAAMA,WAAW,GAAG,MAAM;AACzB,QAAI,CAACJ,UAAD,IAAeE,MAAM,CAACK,WAAP,GAAqB,GAAxC,EAA6C;AAC5CN,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,KAFD,MAEO,IAAID,UAAU,IAAIE,MAAM,CAACK,WAAP,IAAsB,GAAxC,EAA6C;AACnDN,MAAAA,aAAa,CAAC,KAAD,CAAb;AACA;AACD,GAND;;AAQA,QAAMO,SAAS,GAAG,MAAM;AACvBN,IAAAA,MAAM,CAACO,QAAP,CAAgB;AACfC,MAAAA,GAAG,EAAE,CADU;AAEfC,MAAAA,QAAQ,EAAE;AAFK,KAAhB;AAIA,GALD;;AAOAT,EAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,WAAlC;AAEA,sBACC;AAAA,2BACC,QAAC,WAAD;AACC,MAAA,SAAS,EAAC,aADX;AAEC,MAAA,OAAO,EAAEI,SAFV;AAGC,MAAA,KAAK,EAAE;AACNI,QAAAA,MAAM,EAAE,EADF;AAENC,QAAAA,KAAK,EAAE,EAFD;AAGNC,QAAAA,YAAY,EAAE,EAHR;AAINC,QAAAA,KAAK,EAAE,EAJD;AAKNC,QAAAA,MAAM,EAAE,EALF;AAMNC,QAAAA,OAAO,EAAEjB,UAAU,GAAG,MAAH,GAAY,MANzB;AAONkB,QAAAA,OAAO,EAAE;AAPH;AAHR;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAiBA,CA5CD;;GAAMnB,c;;AA8CN,eAAeA,cAAf","sourcesContent":["// NOTE: This scroll to top is the actual working scroll to to when user clicks on the circle arrow that appears when use scrolls down.\r\n// The other `ScrollToTop` component in components folder is for the default react scroll to top behavior on route visit.\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { FiChevronUp } from 'react-icons/fi';\r\n\r\nconst useScrollToTop = () => {\r\n\tconst [showScroll, setShowScroll] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.addEventListener('scroll', scrollToTop);\r\n\t\treturn function cleanup() {\r\n\t\t\twindow.removeEventListener('scroll', scrollToTop);\r\n\t\t};\r\n\t});\r\n\r\n\tconst scrollToTop = () => {\r\n\t\tif (!showScroll && window.pageYOffset > 400) {\r\n\t\t\tsetShowScroll(true);\r\n\t\t} else if (showScroll && window.pageYOffset <= 400) {\r\n\t\t\tsetShowScroll(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst backToTop = () => {\r\n\t\twindow.scrollTo({\r\n\t\t\ttop: 0,\r\n\t\t\tbehavior: 'smooth',\r\n\t\t});\r\n\t};\r\n\r\n\twindow.addEventListener('scroll', scrollToTop);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<FiChevronUp\r\n\t\t\t\tclassName=\"scrollToTop\"\r\n\t\t\t\tonClick={backToTop}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: 45,\r\n\t\t\t\t\twidth: 45,\r\n\t\t\t\t\tborderRadius: 50,\r\n\t\t\t\t\tright: 50,\r\n\t\t\t\t\tbottom: 50,\r\n\t\t\t\t\tdisplay: showScroll ? 'flex' : 'none',\r\n\t\t\t\t\tpadding: 5,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default useScrollToTop;\r\n"]},"metadata":{},"sourceType":"module"}